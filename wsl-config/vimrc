""""""""""""""""""""""""""""""""""""""""""""""""""""
" Vim Configuration

set nu
set rnu
" colorscheme gruvbox
set autoindent
syntax on
set showcmd 
set background=dark
" autocmd VimEnter * NERDTree

""""""""""""""""""""""""""""""""""""""""""""""""""""
" Map Setting

" set Leader Key
let mapleader=','

" use jj to jump to normal mode
" inoremap jj <Esc>

" <leader>w map to :w
inoremap <leader>w <Esc>:w<cr>
nnoremap <leader>w :w<cr>

" exit the whole vim
nnoremap <leader>q :qa<cr>

" one tab equal 4 space
" inoremap <tab> <space><space><space><space>

""""""""""""""""""""""""""""""""""""""""""""""""""""
" Bug Fix

" fix display problem on $TERM=xterm-256color
if &term =~ '256color'
  set t_ut=
endif

""""""""""""""""""""""""""""""""""""""""""""""""""""
" Plugins Manager

call plug#begin('~/.vim/plugged')

" plugins
Plug 'mhinz/vim-startify'                    	" provides a start screen for Vim and Neovim
Plug 'scrooloose/nerdtree'			" a file system explorer for the Vim editor
Plug 'vim-airline/vim-airline'			" change the default airline
Plug 'yggdroot/indentline'			" show indent line
Plug 'tpope/vim-surround'			" provides mappings to easily delete, change and add such surroundings in pairs
Plug 'easymotion/vim-easymotion'		" a much simpler way to use some motions in vim
Plug 'tpope/vim-commentary'			" comment code
Plug 'airblade/vim-gitgutter'			" shows which lines have been added, modified, or removed

" colorscheme
Plug 'morhetz/gruvbox'

call plug#end()

""""""""""""""""""""""""""""""""""""""""""""""""""""
" NERDTree Setting

" Toggle NERDtree by press ,+t
nnoremap <leader>t :NERDTreeToggle<cr>
nnoremap <leader>f :NERDTreeFind<cr>
let NERDTreeShowHidden=1
let NERDTreeIgnore=['\.swp']

""""""""""""""""""""""""""""""""""""""""""""""""""""
" vim-easymotion settiing

nmap <Leader>s <Plug>(easymotion-s2)

""""""""""""""""""""""""""""""""""""""""""""""""""""
" vim-gitgutter setting
set updatetime=100	" 100ms

" autocmd VimLeave * !'echo -ne "\e[1 q"'
" au VimLeave * call nvim_cursor_set_shape("vertical-bar")
" set guicursor=
" autocmd VimLeave * let &t_me="\<Esc>]50;CursorShape=2\x7"

" let g:togglecursor_default = "block"
" let g:togglecursor_insert = "line"
" let g:togglecursor_leave = "line"
" let g:togglecursor_disable_tmux = 0
" autocmd VimLeave * call system('printf "\e[1 q"')
" hi Cursor guifg=#F8F8F8 guibg=#A7A7A7

" enable highlight line where cursor is
set cursorline
highlight CursorLine guibg=darkgray ctermbg=darkgray
set guicursor+=n:block25-blinkon1
set guicursor+=i:ver25-blinkon1
